package com.broadtech.analyse.util;

import com.broadtech.analyse.pojo.main.CNVDVulnerability;
import com.mysql.jdbc.Driver;
import java.sql.*;
import java.util.HashMap;
import java.util.Map;

/**
 * @author leo.J
 * @description CNVD漏洞工具
 * @date 2020-09-23 17:27
 */
public class VulnerabilityUtils {
    public static Map<String, CNVDVulnerability> getVulnData(PreparedStatement ps, Connection connection, String jdbcUrl, String userName, String password) throws SQLException {
        DriverManager.registerDriver(new Driver());
        connection = DriverManager.getConnection(jdbcUrl, userName, password);//获取连接
        String sql1 = "select * from brd_cnvd_vulnerability";
        ps = connection.prepareStatement(sql1);
        Map<String, CNVDVulnerability> valnerabilityMap = new HashMap<>();
        ResultSet rs1 = ps.executeQuery();
        while (rs1.next()) {
            String number = rs1.getString("number");
            String cve_number = rs1.getString("cve_number");
            String cve_url = rs1.getString("cve_url");
            String title = rs1.getString("title");
            String serverity = rs1.getString("serverity");
            String product = rs1.getString("product");
            String is_event = rs1.getString("is_event");
            String submittime = rs1.getString("submit_time");
            String opentime = rs1.getString("open_time");
            String reference_link = rs1.getString("reference_link");
            String formalway = rs1.getString("formalway");
            String description = rs1.getString("description");
            String patchname = rs1.getString("patchname");
            String patch_description = rs1.getString("patch_description");
            String update_time = rs1.getString("update_time");
            if ("".equals(product)) {
                continue;
            }
            CNVDVulnerability vulnerability = new CNVDVulnerability();
            vulnerability.setNumber(number);
            vulnerability.setCveNumber(cve_number);
            vulnerability.setCveUrl(cve_url);
            vulnerability.setTitle(title);
            vulnerability.setServerity(serverity);
            vulnerability.setProduct(product);
            vulnerability.setIsEvent(is_event);
            vulnerability.setSubmitTime(submittime);
            vulnerability.setOpenTime(opentime);
            vulnerability.setReferenceLink(reference_link);
            vulnerability.setFormalway(formalway);
            vulnerability.setDescription(description);
            vulnerability.setPatchName(patchname);
            vulnerability.setPatchDescription(patch_description);
            vulnerability.setUpdateTime(update_time);
            valnerabilityMap.put(product, vulnerability);
        }
        return valnerabilityMap;
    }
}
